# ubunutu 18.04.2 with kernel release 4.18.0-16
FROM ubuntu:bionic-20190307
RUN apt-get update && \
	DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python curl ssh net-tools \
	software-properties-common python-pip debconf-utils apt-utils openjdk-8-jre gpg-agent wget nginx tzdata

RUN pip install --upgrade-strategy only-if-needed setuptools wheel
RUN pip install --upgrade-strategy only-if-needed grpcio==1.26.0 grpcio-tools==1.26.0 pylint==1.9.5

# Installing nodejs from nodesource for building GUI
RUN curl -sL https://deb.nodesource.com/setup_10.x | bash -

RUN apt-get update && \
	DEBIAN_FRONTEND=noninteractive apt-get install -y zip git protobuf-compiler python-openssl \
	libgnutls-openssl27 python-backports.ssl-match-hostname bison flex libtool libpq-dev \
	automake libboost-all-dev libssl1.0-dev byacc nodejs cmake sudo

# Getting swagger codegen to generate client side code for GUI 
RUN wget https://repo1.maven.org/maven2/io/swagger/swagger-codegen-cli/2.4.12/swagger-codegen-cli-2.4.12.jar

RUN	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \
	add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" && \
	apt-get update && \
	DEBIAN_FRONTEND=noninteractive apt-get install -y docker-ce

ENV DOCKER_COMPOSE_VERSION 1.27.0

# debian docker-compose is too old, 1.17. May need to replace following when reving base image with apt-get install
RUN curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" \
	-o /usr/bin/docker-compose \
	&& chmod +x /usr/bin/docker-compose

# Storage Controller build dependencies
RUN curl -s http://mirrors.estointernet.in/apache/thrift/0.12.0/thrift-0.12.0.tar.gz | tar xvz -C / && \
	cd /thrift-0.12.0 && \
	sh bootstrap.sh && \
	sh configure && \
	make && \
	make install && \
	rm -rf /thrift-0.12.0

RUN curl -L https://github.com/edenhill/librdkafka/archive/v1.0.0.tar.gz | tar zxv && \
	cd /librdkafka-1.0.0 && \
	./configure && \
	make && \
	make install && \
	rm -rf /librdkafka-1.0.0

RUN curl -s https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz | tar xvz -C /usr/local 
ENV PATH "${PATH}:/usr/local/go/bin"

# Protobuf? are they stupid or what? nobody else has read permission except user who installs it! 
RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v3.7.0/protoc-3.7.0-linux-x86_64.zip && \ 
	mkdir /tmp/foo && unzip protoc-3.7.0-linux-x86_64.zip -d /tmp/foo && chmod -R a+rx /tmp/foo && \
	cd /tmp/foo && cp -r bin include /usr/local && /bin/rm -rf /tmp/foo

RUN git clone --branch 4.4.0-beta.1 https://github.com/cpp-redis/cpp_redis.git && \
	cd cpp_redis && \
	git submodule init && git submodule update && \
	mkdir build && cd build && \
	cmake .. -DCMAKE_BUILD_TYPE=Release && make && make install && \
	cd ../.. && rm -rf cpp_redis

# for helm
RUN curl -sL https://get.helm.sh/helm-v3.2.2-linux-amd64.tar.gz |  tar zx && \
	mv linux-amd64/helm /usr/local/bin/helm && \
	/bin/rm -rf linux-amd64

# kubectl
RUN curl  -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl && \
    chmod +x ./kubectl && \
    mv ./kubectl /usr/local/bin/kubectl

# kind
RUN curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.8.1/kind-$(uname)-amd64 && \
    chmod +x ./kind && \
    mv ./kind /usr/local/bin/kind


# yocto
# hardcoded to master dev-line as yocto will probably never branch
ARG YOCTO_BLD=814
ARG yocto=http://dochub.fungible.local/doc/jenkins/master/cc-linux-yocto/$YOCTO_BLD
ARG poky_x86=poky-glibc-x86_64-fun-image-x86-64combo-core2-64-qemux86-64-toolchain-3.0.2.sh
ARG poky_mips=poky-glibc-x86_64-fun-image-mips64r6hv-mipsisa64r6-mips64r6-toolchain-3.0.2.sh

RUN wget -q ${yocto}/x86_64/${poky_x86} && \
	wget -q ${yocto}/mips64hv/${poky_mips} && \
	chmod 755 ${poky_x86} ${poky_mips} && \
	./${poky_x86} -y && \
	./${poky_mips} -y && \
	rm -f ${poky_x86} ${poky_mips}

RUN apt-get clean
