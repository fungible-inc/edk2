# runtime ccLinux
ARG DOC_REG
FROM ${DOC_REG}/zmq:master AS zmq-base
FROM ${DOC_REG}/hiredis_swss:master AS redis-base
FROM ${DOC_REG}/nanomsg:master AS nanomsg-base
FROM ${DOC_REG}/fun_external:master AS fun_external-base

FROM ${DOC_REG}/run_funos:master

ARG GIT_SSL_NO_VERIFY=1
ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update -qq \
	&& apt-get install -qq -y --no-install-recommends --no-install-suggests \
		iproute2 \
		python3-pip \
		python3-setuptools \
		sudo \
		libnl-3-200 \
		libnl-route-3-200 \
		libssh-4 \
		libpci3 \
		libreadline8 \
		libjson-c-dev \
		pciutils \
		net-tools \
		iputils-ping \
		libxslt1.1 \
		ethtool \
		tcpdump \
		python-setuptools \
		isc-dhcp-client \
		libconfig9 \
		qemu-utils \
		python2-dev

COPY --from=zmq-base /usr/local /usr/local

COPY --from=redis-base /usr/local /usr/local

COPY --from=nanomsg-base /usr/local /usr/local

# nanomsg installation requires ldconfig
RUN ldconfig

RUN pip2 install --upgrade-strategy only-if-needed --only-binary :all: \
	redis

RUN pip2 install --upgrade-strategy only-if-needed \
	bitstring \
	pyyaml \
	jinja2 \
	six \
	tabulate \
	typing \
	ipaddress \
	cffi \
	nnpy \
	config==0.4.2 \
	deepdiff \
	enum34 \
	jsonmerge \
	netaddr \
	ply \
	scapy \
	ctypesgen \
	https://github.com/p4lang/ptf/archive/master.tar.gz

#as required by the storage agent, python 3 version
RUN pip3 install --upgrade wheel

RUN pip3 install --upgrade-strategy only-if-needed --only-binary :all: \
	redis==3.0 \
	Flask==1.1 \
	redis==3.0 \
	cheroot==8.4.5

RUN pip3 install --upgrade-strategy only-if-needed thrift==0.13

# end of ss agent

ARG REDIS=6379
RUN	REDIS_PORT=${REDIS} \
	REDIS_CONFIG_FILE=/etc/opt.fungible/redis/redis_${REDIS}.conf \
	REDIS_LOG_FILE=/var/log/fungible/redis_${REDIS}.log \
	REDIS_DATA_DIR=/var/opt/fungible/lib/redis/${REDIS} \
	REDIS_EXECUTABLE=`command -v redis-server` \
	/bin/sh -x /usr/local/redis/utils/install_server.sh


ARG REDIS=6380
RUN	REDIS_PORT=${REDIS} \
	REDIS_CONFIG_FILE=/etc/opt.fungible/redis/redis_${REDIS}.conf \
	REDIS_LOG_FILE=/var/log/fungible/redis_${REDIS}.log \
	REDIS_DATA_DIR=/var/opt/fungible/lib/redis/${REDIS} \
	REDIS_EXECUTABLE=`command -v redis-server` \
	/bin/sh -x /usr/local/redis/utils/install_server.sh

ARG REDIS=6381
RUN	REDIS_PORT=${REDIS} \
	REDIS_CONFIG_FILE=/etc/opt.fungible/redis/redis_${REDIS}.conf \
	REDIS_LOG_FILE=/var/log/fungible/redis_${REDIS}.log \
	REDIS_DATA_DIR=/var/opt/fungible/lib/redis/${REDIS} \
	REDIS_EXECUTABLE=`command -v redis-server` \
	/bin/sh -x /usr/local/redis/utils/install_server.sh \
	&& rm -rf /usr/local/redis

# FRR login
RUN groupadd -g 92 frr \
	&& groupadd -r -g 85 frrvty \
	&& adduser --system --ingroup frr --home /var/run/frr --gecos "FRR suite" --shell /sbin/nologin frr \
	&& usermod -a -G frrvty frr

# Fungible login
RUN groupadd -g 3201 fungible \
	&& useradd -l -m -u 3201 -g fungible -s /bin/bash fcpusr \
	&& echo "fcpusr ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/local

RUN install -m 755 -o frr -g frr -d /var/log/frr \
	&& install -m 775 -o frr -g frrvty -d /etc/frr \
	&& install -m 640 -o frr -g frr /dev/null /etc/frr/zebra.conf \
	&& install -m 640 -o frr -g frr /dev/null /etc/frr/bgpd.conf \
	&& install -m 640 -o frr -g frr /dev/null /etc/frr/isisd.conf \
	&& install -m 640 -o frr -g frrvty /dev/null /etc/frr/vtysh.conf

# Add /opt/fungible/lib in ld path
RUN echo /opt/fungible/lib > /etc/ld.so.conf.d/fungible.conf

# PATH
RUN echo PATH=$PATH:/opt/fungible/bin/frr:/opt/fungible/sbin/frr > /etc/environment

RUN printf '#!/bin/bash\nsudo rm -f /var/run/redis*\nfor p in 79 80 81\ndo\nsudo /etc/init.d/redis_63$p start\ndone\nexec $*\n' > /start_redis.sh \
	&& chmod 755 /start_redis.sh

# NOTE: /fun_external is hardcoded in funcp builds. So need to install these under that dir.
COPY --from=fun_external-base /fun_external /fun_external

# all apt-get commands should be above this
# clean up
RUN apt-get clean

CMD ["/bin/bash"]
