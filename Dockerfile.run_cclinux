ARG DOC_REG
FROM ${DOC_REG}/run_funos:latest
RUN apt-get update && \
	DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends --no-install-suggests \
	iproute2 redis-server python-pip python-thrift sudo libconfig9 libnl-3-200 libnl-route-3-200 \
	libssh-4 libhiredis0.13 libpci3 pciutils net-tools isc-dhcp-client iputils-ping libxslt1.1 \
	ethtool tcpdump vim

RUN pip install --upgrade-strategy only-if-needed setuptools wheel pipenv
RUN pip install --upgrade-strategy only-if-needed --only-binary :all: flask redis networkx
RUN pip install --upgrade-strategy only-if-needed pyyaml jinja2 pyzmq six bunch click hexdump tabulate futures ipaddress typing future

# FRR login
RUN groupadd -g 92 frr && groupadd -r -g 85 frrvty && \
	adduser --system --ingroup frr --home /var/run/frr --gecos "FRR suite" --shell /sbin/nologin frr && \
	usermod -a -G frrvty frr

# Fungible login
RUN groupadd -g 3201 fungible && \
	useradd -l -m -u 3201 -g fungible -s /bin/bash fcpusr && \
	echo "fcpusr ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/local

RUN install -m 755 -o frr -g frr -d /var/log/frr && \
	install -m 775 -o frr -g frrvty -d /etc/frr && \
	install -m 640 -o frr -g frr /dev/null /etc/frr/zebra.conf && \
	install -m 640 -o frr -g frr /dev/null /etc/frr/bgpd.conf && \
	install -m 640 -o frr -g frr /dev/null /etc/frr/isisd.conf && \
	install -m 640 -o frr -g frrvty /dev/null /etc/frr/vtysh.conf

# Add /opt/fungible/lib in ld path
RUN echo /opt/fungible/lib > /etc/ld.so.conf.d/fungible.conf

# PATH
RUN echo PATH=$PATH:/opt/fungible/bin/frr:/opt/fungible/sbin/frr > /etc/environment

#RUN mkdir /var/run/sshd

# temp, need to take it from multi-stage docker for JSONC libjson-c.4, redis.conf, zmq
COPY cclinux.tar /tmp
RUN tar xf /tmp/cclinux.tar && rm -f /tmp/cclinux.tar && mkdir -p /var/lib/lldpad

ARG REDISCONF_DOWNLOAD_LOC=http://dochub.fungible.local/doc/jenkins/sandbox/frr/redis_6379.conf
ARG REDISCONF_LOCAL_DIR=/etc/redis/
ADD $REDISCONF_DOWNLOAD_LOC $REDISCONF_LOCAL_DIR
RUN chmod a+rwx /etc/redis/redis_6379.conf && touch /var/log/redis_6379.log && chmod a+rwx /var/log/redis_6379.log && chmod a+rwx /var/lib/redis/ && mkdir -p /var/lib/redis/6379 && chmod a+rwx /var/lib/redis/6379
	
ARG REDISCONF_DOWNLOAD_LOC=http://dochub.fungible.local/doc/jenkins/sandbox/frr/redis_6380.conf
ARG REDISCONF_LOCAL_DIR=/etc/redis/
ADD $REDISCONF_DOWNLOAD_LOC $REDISCONF_LOCAL_DIR
RUN chmod a+rwx /etc/redis/redis_6380.conf && touch /var/log/redis_6380.log && chmod a+rwx /var/log/redis_6380.log && chmod a+rwx /var/lib/redis/ && mkdir -p /var/lib/redis/6380 && chmod a+rwx /var/lib/redis/6380
	
ARG REDISCONF_DOWNLOAD_LOC=http://dochub.fungible.local/doc/jenkins/sandbox/frr/redis_6381.conf
ARG REDISCONF_LOCAL_DIR=/etc/redis/
ADD $REDISCONF_DOWNLOAD_LOC $REDISCONF_LOCAL_DIR
RUN chmod a+rwx /etc/redis/redis_6381.conf && touch /var/log/redis_6381.log && chmod a+rwx /var/log/redis_6381.log && chmod a+rwx /var/lib/redis/ && mkdir -p /var/lib/redis/6381 && chmod a+rwx /var/lib/redis/6381
	
# Copy over OpenR needed packages.

ARG OPENR_NEEDED_SYSTEM_LIBS_TAR_PATH=http://dochub.fungible.local/doc/jenkins/sandbox/frr/
ARG OPENR_SYS_LIBS_TAR=openr_system_missing_qemu.tar
RUN cd /tmp && wget $OPENR_NEEDED_SYSTEM_LIBS_TAR_PATH/$OPENR_SYS_LIBS_TAR && tar xvf $OPENR_SYS_LIBS_TAR && cp missing/* /usr/lib && rm $OPENR_SYS_LIBS_TAR && rm -rf missing/

ARG OPENR_NEEDED_LIBS_TAR_PATH=http://dochub.fungible.local/doc/jenkins/openr/latest/
ARG OPENR_TAR=openr.tar
RUN cd /tmp && wget $OPENR_NEEDED_LIBS_TAR_PATH/$OPENR_TAR && tar xvf $OPENR_TAR && cp openr/openrb/lib/* /usr/lib && rm $OPENR_TAR && rm -rf openr/

ARG DHCLIENT=http://dochub.fungible.local/doc/jenkins/sandbox/frr/dhclient.conf
RUN cd /etc/dhcp && rm -f dhclient.conf && wget $DHCLIENT 

#
# Set up OpenR breeze
#
ARG OPENR_BREEZE_TAR=openr_breeze.tar 
RUN cd /tmp && wget $OPENR_NEEDED_LIBS_TAR_PATH/$OPENR_BREEZE_TAR && tar xvf $OPENR_BREEZE_TAR && \
    cp  /tmp/openr/build/srcs/fbthrift/build/bin/thrift1 /usr/local/bin && \
    cd /tmp/openr/build/srcs/fbzmq/fbzmq/py && python setup.py install && \
    cd /tmp/openr/build/srcs/fbthrift/thrift/lib/py && python setup.py install && \
    cd /tmp/openr/openr/py && python setup.py build && python setup.py install && \
    cd /tmp && rm -rf openr/

#
# Set up pipenv for storage agent
#
RUN mkdir -p /var/opt/storage_agent 
RUN cd /var/opt/storage_agent && pipenv install ipaddress redis thrift==0.11 Flask==0.10.1 

RUN apt-get clean

# set the enviroment for the build
#WORKDIR /home/fcpusr
# some test script expets $USER to be set
#ENV USER fcpusr
#USER fcpusr
CMD ["/bin/bash"]

