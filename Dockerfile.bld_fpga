# ubunut 18.04.2 with kernel version 4.18.0-16
FROM ubuntu:bionic-20190307

RUN apt-get update && \
	DEBIAN_FRONTEND=noninteractive apt-get install -y wget python git-core python3 locales repo \
	gcc-arm-linux-gnueabihf libncurses-dev libqt4-dev pkg-config u-boot-tools device-tree-compiler \
	gdb-multiarch g++-arm-linux-gnueabihf flex bison libssl-dev u-boot-tools \
	sed coreutils unzip texi2html texinfo libsdl1.2-dev docbook-utils gawk python-pysqlite2 \
	diffstat help2man make gcc build-essential g++ desktop-file-utils chrpath libgl1-mesa-dev \
	libglu1-mesa-dev autoconf automake groff libtool xterm lib32z1 cpio help2man bc

# env needed for angstrom build.
RUN locale-gen en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8

# set HOME so that git config before the angstrom build works
ENV HOME=/tmp/src

# altera tools
# http://fpgasoftware.intel.com/soceds/18.1/?edition=standard&platform=linux&download_manager=direct
ARG altera=http://dochub.fungible.local/doc/sw/tools
ARG tool_chain=SoCEDSSetup-18.1.0.625-linux.run

RUN wget -q ${altera}/${tool_chain} && \
	chmod 755 ${poky_x86} ${tool_chain} && \
	./${tool_chain} --installdir /opt/altera --mode unattended --accept_eula 1 && \
	rm -f ${tool_chain}

# angstrom gcc
# Note that this image is used to build angstrom tools chain which is to be installed here.
# kind of chicken and egg situation which has been overcome by creating first angstrom build without
# the following and then Dockerfile is updated to include this installation.
ARG angstrom=http://dochub.fungible.local/doc/jenkins/fpga_angstrom/latest
ARG tool_chain=angstrom-glibc-x86_64-armv7at2hf-neon-v2018.06-toolchain.sh

RUN wget -q ${angstrom}/${tool_chain} && \
	chmod 755 ${poky_x86} ${tool_chain} && \
	./${tool_chain} -y -d /opt/arm-sdk && \
	rm -f ${tool_chain}

