ARG DOC_REG

FROM ${DOC_REG}/run_funos:latest

RUN apt-get update && \
	DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common make gcc-7 \
	git pkg-config libpixman-1-dev libfdt-dev rsync xxd wget libcap-dev libattr1-dev \
	libelf-dev qemu-utils libguestfs-tools libvirt-clients bc sudo linux-image-generic \
	libnl-3-dev libnl-route-3-dev ninja-build python-yaml python-jinja2 automake libtool \
	pandoc bison flex unzip

RUN curl https://bootstrap.pypa.io/get-pip.py --output get-pip.py && python2 get-pip.py && /bin/rm get-pip.py

RUN pip2 install PyYAML jinja2 ply pandas

RUN	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \
	add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" && \
	apt-get update && \
	DEBIAN_FRONTEND=noninteractive apt-get install -y docker-ce

# mips gcc
RUN mkdir /opt/cross && \
	curl -s http://dochub.fungible.local/doc/sw/tools/mips/linux-mips64-gcc-8.2.tar.gz | \
	tar xfz - -C /opt/cross && \
	curl -s http://dochub.fungible.local/doc/sw/tools/mips/codescape_16_3_crosstool/Codescape.GNU.Tools.Package.2016.05-03.for.MIPS.MTI.Bare.Metal.CentOS-5.x86_64.tar.gz | \
	tar xfz - -C /opt/cross

# yocto
# hardcoded to master dev-line as yocto will probably never branch
ARG YOCTO_BLD=814
ARG yocto=http://dochub.fungible.local/doc/jenkins/master/cc-linux-yocto/$YOCTO_BLD
ARG poky_x86=poky-glibc-x86_64-fun-image-x86-64combo-core2-64-qemux86-64-toolchain-3.0.2.sh
ARG poky_mips=poky-glibc-x86_64-fun-image-mips64r6hv-mipsisa64r6-mips64r6-toolchain-3.0.2.sh

RUN wget -q ${yocto}/x86_64/${poky_x86} && \
	wget -q ${yocto}/mips64hv/${poky_mips} && \
	chmod 755 ${poky_x86} ${poky_mips} && \
	./${poky_x86} -y && \
	./${poky_mips} -y && \
	rm -f ${poky_x86} ${poky_mips}

# u-boot
RUN apt-get install -y gcc-mips64-linux-gnuabi64

# accel-regex
RUN pip2 install nose

#golang
ARG GO_VER=go1.13.4
ARG GO_DOWNLOAD_LOC=https://dl.google.com/go/$GO_VER.linux-amd64.tar.gz
ARG GO_LOCAL_DIR=/usr/lib
ARG GO_LOCAL=/usr/lib/$GO_VER.linux-amd64.tar.gz

# Install golang package to docker
ADD $GO_DOWNLOAD_LOC $GO_LOCAL_DIR
RUN cd $GO_LOCAL_DIR; tar xvf $GO_LOCAL; rm $GO_LOCAL
ENV PATH "${PATH}:${GO_LOCAL_DIR}/go/bin"

# Ydk-gen build requirements
RUN apt-get install --no-install-recommends --no-install-suggests -y \
	libxml2-dev doxygen graphviz libssh-dev libcurl4-openssl-dev libxslt-dev libtool-bin \
	libpcre3-dev libxslt1-dev python3-dev python2-dev devscripts debhelper

# dpcsh on BMC (arm)
RUN	DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends --no-install-suggests \
	gcc-arm-linux-gnueabi libc6-dev-armel-cross

# Libfunq requirements
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y libpci-dev libpcap-dev libreadline-dev

# SBPFirmware
RUN apt-get install -y cmake
RUN pip2 install PyCrypto cryptography
ENV MIPS_ELF_ROOT=/opt/cross/mips-mti-elf/2016.05-03/

# all apt-get commands should be above this
RUN apt-get clean
